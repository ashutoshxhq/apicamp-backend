// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: prospects.proto

package prospects

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Prospects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	UserId string `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Phone  string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Id     string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Prospects) Reset() {
	*x = Prospects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prospects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prospects) ProtoMessage() {}

func (x *Prospects) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prospects.ProtoReflect.Descriptor instead.
func (*Prospects) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{0}
}

func (x *Prospects) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Prospects) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Prospects) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Prospects) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Prospects) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Prospects) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters map[string]*_struct.Value `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetSingleProspectsRequest) Reset() {
	*x = GetSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleProspectsRequest) ProtoMessage() {}

func (x *GetSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*GetSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{1}
}

func (x *GetSingleProspectsRequest) GetFilters() map[string]*_struct.Value {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Prospects `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSingleProspectsResponse) Reset() {
	*x = GetSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleProspectsResponse) ProtoMessage() {}

func (x *GetSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*GetSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{2}
}

func (x *GetSingleProspectsResponse) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters map[string]*_struct.Value `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMultipleProspectsRequest) Reset() {
	*x = GetMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleProspectsRequest) ProtoMessage() {}

func (x *GetMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*GetMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{3}
}

func (x *GetMultipleProspectsRequest) GetFilters() map[string]*_struct.Value {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Prospects `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMultipleProspectsResponse) Reset() {
	*x = GetMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleProspectsResponse) ProtoMessage() {}

func (x *GetMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*GetMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{4}
}

func (x *GetMultipleProspectsResponse) GetData() []*Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Prospects `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSingleProspectsRequest) Reset() {
	*x = CreateSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleProspectsRequest) ProtoMessage() {}

func (x *CreateSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*CreateSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSingleProspectsRequest) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateSingleProspectsResponse) Reset() {
	*x = CreateSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleProspectsResponse) ProtoMessage() {}

func (x *CreateSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*CreateSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSingleProspectsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Prospects `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMultipleProspectsRequest) Reset() {
	*x = CreateMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultipleProspectsRequest) ProtoMessage() {}

func (x *CreateMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*CreateMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{7}
}

func (x *CreateMultipleProspectsRequest) GetData() []*Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateMultipleProspectsResponse) Reset() {
	*x = CreateMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultipleProspectsResponse) ProtoMessage() {}

func (x *CreateMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*CreateMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMultipleProspectsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters map[string]*_struct.Value `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data    map[string]*_struct.Value `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateProspectsRequest) Reset() {
	*x = UpdateProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProspectsRequest) ProtoMessage() {}

func (x *UpdateProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProspectsRequest.ProtoReflect.Descriptor instead.
func (*UpdateProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateProspectsRequest) GetFilters() map[string]*_struct.Value {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *UpdateProspectsRequest) GetData() map[string]*_struct.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateProspectsResponse) Reset() {
	*x = UpdateProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProspectsResponse) ProtoMessage() {}

func (x *UpdateProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProspectsResponse.ProtoReflect.Descriptor instead.
func (*UpdateProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateProspectsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters map[string]*_struct.Value `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeleteProspectsRequest) Reset() {
	*x = DeleteProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProspectsRequest) ProtoMessage() {}

func (x *DeleteProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProspectsRequest.ProtoReflect.Descriptor instead.
func (*DeleteProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteProspectsRequest) GetFilters() map[string]*_struct.Value {
	if x != nil {
		return x.Filters
	}
	return nil
}

type DeleteProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteProspectsResponse) Reset() {
	*x = DeleteProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProspectsResponse) ProtoMessage() {}

func (x *DeleteProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProspectsResponse.ProtoReflect.Descriptor instead.
func (*DeleteProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteProspectsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_prospects_proto protoreflect.FileDescriptor

var file_prospects_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x52, 0x0a, 0x0c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x4a, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x52,
	0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x52, 0x0a,
	0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xbe, 0x06, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x79, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prospects_proto_rawDescOnce sync.Once
	file_prospects_proto_rawDescData = file_prospects_proto_rawDesc
)

func file_prospects_proto_rawDescGZIP() []byte {
	file_prospects_proto_rawDescOnce.Do(func() {
		file_prospects_proto_rawDescData = protoimpl.X.CompressGZIP(file_prospects_proto_rawDescData)
	})
	return file_prospects_proto_rawDescData
}

var file_prospects_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_prospects_proto_goTypes = []interface{}{
	(*Prospects)(nil),                       // 0: prospects.Prospects
	(*GetSingleProspectsRequest)(nil),       // 1: prospects.GetSingleProspectsRequest
	(*GetSingleProspectsResponse)(nil),      // 2: prospects.GetSingleProspectsResponse
	(*GetMultipleProspectsRequest)(nil),     // 3: prospects.GetMultipleProspectsRequest
	(*GetMultipleProspectsResponse)(nil),    // 4: prospects.GetMultipleProspectsResponse
	(*CreateSingleProspectsRequest)(nil),    // 5: prospects.CreateSingleProspectsRequest
	(*CreateSingleProspectsResponse)(nil),   // 6: prospects.CreateSingleProspectsResponse
	(*CreateMultipleProspectsRequest)(nil),  // 7: prospects.CreateMultipleProspectsRequest
	(*CreateMultipleProspectsResponse)(nil), // 8: prospects.CreateMultipleProspectsResponse
	(*UpdateProspectsRequest)(nil),          // 9: prospects.UpdateProspectsRequest
	(*UpdateProspectsResponse)(nil),         // 10: prospects.UpdateProspectsResponse
	(*DeleteProspectsRequest)(nil),          // 11: prospects.DeleteProspectsRequest
	(*DeleteProspectsResponse)(nil),         // 12: prospects.DeleteProspectsResponse
	nil,                                     // 13: prospects.GetSingleProspectsRequest.FiltersEntry
	nil,                                     // 14: prospects.GetMultipleProspectsRequest.FiltersEntry
	nil,                                     // 15: prospects.UpdateProspectsRequest.FiltersEntry
	nil,                                     // 16: prospects.UpdateProspectsRequest.DataEntry
	nil,                                     // 17: prospects.DeleteProspectsRequest.FiltersEntry
	(*_struct.Value)(nil),                   // 18: google.protobuf.Value
}
var file_prospects_proto_depIdxs = []int32{
	13, // 0: prospects.GetSingleProspectsRequest.filters:type_name -> prospects.GetSingleProspectsRequest.FiltersEntry
	0,  // 1: prospects.GetSingleProspectsResponse.data:type_name -> prospects.Prospects
	14, // 2: prospects.GetMultipleProspectsRequest.filters:type_name -> prospects.GetMultipleProspectsRequest.FiltersEntry
	0,  // 3: prospects.GetMultipleProspectsResponse.data:type_name -> prospects.Prospects
	0,  // 4: prospects.CreateSingleProspectsRequest.data:type_name -> prospects.Prospects
	0,  // 5: prospects.CreateMultipleProspectsRequest.data:type_name -> prospects.Prospects
	15, // 6: prospects.UpdateProspectsRequest.filters:type_name -> prospects.UpdateProspectsRequest.FiltersEntry
	16, // 7: prospects.UpdateProspectsRequest.data:type_name -> prospects.UpdateProspectsRequest.DataEntry
	17, // 8: prospects.DeleteProspectsRequest.filters:type_name -> prospects.DeleteProspectsRequest.FiltersEntry
	18, // 9: prospects.GetSingleProspectsRequest.FiltersEntry.value:type_name -> google.protobuf.Value
	18, // 10: prospects.GetMultipleProspectsRequest.FiltersEntry.value:type_name -> google.protobuf.Value
	18, // 11: prospects.UpdateProspectsRequest.FiltersEntry.value:type_name -> google.protobuf.Value
	18, // 12: prospects.UpdateProspectsRequest.DataEntry.value:type_name -> google.protobuf.Value
	18, // 13: prospects.DeleteProspectsRequest.FiltersEntry.value:type_name -> google.protobuf.Value
	1,  // 14: prospects.prospectsService.GetSingleProspects:input_type -> prospects.GetSingleProspectsRequest
	3,  // 15: prospects.prospectsService.GetMultipleProspects:input_type -> prospects.GetMultipleProspectsRequest
	5,  // 16: prospects.prospectsService.CreateSingleProspects:input_type -> prospects.CreateSingleProspectsRequest
	7,  // 17: prospects.prospectsService.CreateMultipleProspects:input_type -> prospects.CreateMultipleProspectsRequest
	9,  // 18: prospects.prospectsService.UpdateProspects:input_type -> prospects.UpdateProspectsRequest
	11, // 19: prospects.prospectsService.DeleteProspects:input_type -> prospects.DeleteProspectsRequest
	2,  // 20: prospects.prospectsService.GetSingleProspects:output_type -> prospects.GetSingleProspectsResponse
	4,  // 21: prospects.prospectsService.GetMultipleProspects:output_type -> prospects.GetMultipleProspectsResponse
	6,  // 22: prospects.prospectsService.CreateSingleProspects:output_type -> prospects.CreateSingleProspectsResponse
	8,  // 23: prospects.prospectsService.CreateMultipleProspects:output_type -> prospects.CreateMultipleProspectsResponse
	10, // 24: prospects.prospectsService.UpdateProspects:output_type -> prospects.UpdateProspectsResponse
	12, // 25: prospects.prospectsService.DeleteProspects:output_type -> prospects.DeleteProspectsResponse
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_prospects_proto_init() }
func file_prospects_proto_init() {
	if File_prospects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prospects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prospects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prospects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prospects_proto_goTypes,
		DependencyIndexes: file_prospects_proto_depIdxs,
		MessageInfos:      file_prospects_proto_msgTypes,
	}.Build()
	File_prospects_proto = out.File
	file_prospects_proto_rawDesc = nil
	file_prospects_proto_goTypes = nil
	file_prospects_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProspectsServiceClient is the client API for ProspectsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProspectsServiceClient interface {
	GetSingleProspects(ctx context.Context, in *GetSingleProspectsRequest, opts ...grpc.CallOption) (*GetSingleProspectsResponse, error)
	GetMultipleProspects(ctx context.Context, in *GetMultipleProspectsRequest, opts ...grpc.CallOption) (*GetMultipleProspectsResponse, error)
	CreateSingleProspects(ctx context.Context, in *CreateSingleProspectsRequest, opts ...grpc.CallOption) (*CreateSingleProspectsResponse, error)
	CreateMultipleProspects(ctx context.Context, in *CreateMultipleProspectsRequest, opts ...grpc.CallOption) (*CreateMultipleProspectsResponse, error)
	UpdateProspects(ctx context.Context, in *UpdateProspectsRequest, opts ...grpc.CallOption) (*UpdateProspectsResponse, error)
	DeleteProspects(ctx context.Context, in *DeleteProspectsRequest, opts ...grpc.CallOption) (*DeleteProspectsResponse, error)
}

type prospectsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProspectsServiceClient(cc grpc.ClientConnInterface) ProspectsServiceClient {
	return &prospectsServiceClient{cc}
}

func (c *prospectsServiceClient) GetSingleProspects(ctx context.Context, in *GetSingleProspectsRequest, opts ...grpc.CallOption) (*GetSingleProspectsResponse, error) {
	out := new(GetSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/GetSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) GetMultipleProspects(ctx context.Context, in *GetMultipleProspectsRequest, opts ...grpc.CallOption) (*GetMultipleProspectsResponse, error) {
	out := new(GetMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/GetMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) CreateSingleProspects(ctx context.Context, in *CreateSingleProspectsRequest, opts ...grpc.CallOption) (*CreateSingleProspectsResponse, error) {
	out := new(CreateSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/CreateSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) CreateMultipleProspects(ctx context.Context, in *CreateMultipleProspectsRequest, opts ...grpc.CallOption) (*CreateMultipleProspectsResponse, error) {
	out := new(CreateMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/CreateMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) UpdateProspects(ctx context.Context, in *UpdateProspectsRequest, opts ...grpc.CallOption) (*UpdateProspectsResponse, error) {
	out := new(UpdateProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/UpdateProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) DeleteProspects(ctx context.Context, in *DeleteProspectsRequest, opts ...grpc.CallOption) (*DeleteProspectsResponse, error) {
	out := new(DeleteProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/DeleteProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProspectsServiceServer is the server API for ProspectsService service.
type ProspectsServiceServer interface {
	GetSingleProspects(context.Context, *GetSingleProspectsRequest) (*GetSingleProspectsResponse, error)
	GetMultipleProspects(context.Context, *GetMultipleProspectsRequest) (*GetMultipleProspectsResponse, error)
	CreateSingleProspects(context.Context, *CreateSingleProspectsRequest) (*CreateSingleProspectsResponse, error)
	CreateMultipleProspects(context.Context, *CreateMultipleProspectsRequest) (*CreateMultipleProspectsResponse, error)
	UpdateProspects(context.Context, *UpdateProspectsRequest) (*UpdateProspectsResponse, error)
	DeleteProspects(context.Context, *DeleteProspectsRequest) (*DeleteProspectsResponse, error)
}

// UnimplementedProspectsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProspectsServiceServer struct {
}

func (*UnimplementedProspectsServiceServer) GetSingleProspects(context.Context, *GetSingleProspectsRequest) (*GetSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) GetMultipleProspects(context.Context, *GetMultipleProspectsRequest) (*GetMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) CreateSingleProspects(context.Context, *CreateSingleProspectsRequest) (*CreateSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) CreateMultipleProspects(context.Context, *CreateMultipleProspectsRequest) (*CreateMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMultipleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) UpdateProspects(context.Context, *UpdateProspectsRequest) (*UpdateProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) DeleteProspects(context.Context, *DeleteProspectsRequest) (*DeleteProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProspects not implemented")
}

func RegisterProspectsServiceServer(s *grpc.Server, srv ProspectsServiceServer) {
	s.RegisterService(&_ProspectsService_serviceDesc, srv)
}

func _ProspectsService_GetSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).GetSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/GetSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).GetSingleProspects(ctx, req.(*GetSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_GetMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).GetMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/GetMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).GetMultipleProspects(ctx, req.(*GetMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_CreateSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).CreateSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/CreateSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).CreateSingleProspects(ctx, req.(*CreateSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_CreateMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).CreateMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/CreateMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).CreateMultipleProspects(ctx, req.(*CreateMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_UpdateProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).UpdateProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/UpdateProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).UpdateProspects(ctx, req.(*UpdateProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_DeleteProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).DeleteProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/DeleteProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).DeleteProspects(ctx, req.(*DeleteProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProspectsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prospects.prospectsService",
	HandlerType: (*ProspectsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSingleProspects",
			Handler:    _ProspectsService_GetSingleProspects_Handler,
		},
		{
			MethodName: "GetMultipleProspects",
			Handler:    _ProspectsService_GetMultipleProspects_Handler,
		},
		{
			MethodName: "CreateSingleProspects",
			Handler:    _ProspectsService_CreateSingleProspects_Handler,
		},
		{
			MethodName: "CreateMultipleProspects",
			Handler:    _ProspectsService_CreateMultipleProspects_Handler,
		},
		{
			MethodName: "UpdateProspects",
			Handler:    _ProspectsService_UpdateProspects_Handler,
		},
		{
			MethodName: "DeleteProspects",
			Handler:    _ProspectsService_DeleteProspects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prospects.proto",
}
