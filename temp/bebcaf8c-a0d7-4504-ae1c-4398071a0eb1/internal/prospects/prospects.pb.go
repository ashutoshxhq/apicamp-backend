// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: prospects.proto

package prospects

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FilterField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FilterField) Reset() {
	*x = FilterField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterField) ProtoMessage() {}

func (x *FilterField) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterField.ProtoReflect.Descriptor instead.
func (*FilterField) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{1}
}

func (x *FilterField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilterField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *FilterField `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   *FilterField `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email  *FilterField `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status *FilterField `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UserId *FilterField `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Phone  *FilterField `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetId() *FilterField {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Filter) GetName() *FilterField {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Filter) GetEmail() *FilterField {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Filter) GetStatus() *FilterField {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Filter) GetUserId() *FilterField {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *Filter) GetPhone() *FilterField {
	if x != nil {
		return x.Phone
	}
	return nil
}

type Prospects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email  string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UserId string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Phone  string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Prospects) Reset() {
	*x = Prospects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prospects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prospects) ProtoMessage() {}

func (x *Prospects) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prospects.ProtoReflect.Descriptor instead.
func (*Prospects) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{3}
}

func (x *Prospects) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prospects) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Prospects) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Prospects) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Prospects) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Prospects) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetSingleProspectsRequest) Reset() {
	*x = GetSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleProspectsRequest) ProtoMessage() {}

func (x *GetSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*GetSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{4}
}

func (x *GetSingleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Prospects `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Success bool       `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error     `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetSingleProspectsResponse) Reset() {
	*x = GetSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleProspectsResponse) ProtoMessage() {}

func (x *GetSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*GetSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{5}
}

func (x *GetSingleProspectsResponse) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSingleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetSingleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Filter *Filter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetMultipleProspectsRequest) Reset() {
	*x = GetMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleProspectsRequest) ProtoMessage() {}

func (x *GetMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*GetMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{6}
}

func (x *GetMultipleProspectsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetMultipleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Prospects `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Success bool         `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetMultipleProspectsResponse) Reset() {
	*x = GetMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleProspectsResponse) ProtoMessage() {}

func (x *GetMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*GetMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{7}
}

func (x *GetMultipleProspectsResponse) GetData() []*Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMultipleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetMultipleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Prospects `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSingleProspectsRequest) Reset() {
	*x = CreateSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleProspectsRequest) ProtoMessage() {}

func (x *CreateSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*CreateSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSingleProspectsRequest) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateSingleProspectsResponse) Reset() {
	*x = CreateSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleProspectsResponse) ProtoMessage() {}

func (x *CreateSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*CreateSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSingleProspectsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSingleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSingleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Prospects `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMultipleProspectsRequest) Reset() {
	*x = CreateMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultipleProspectsRequest) ProtoMessage() {}

func (x *CreateMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*CreateMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{10}
}

func (x *CreateMultipleProspectsRequest) GetData() []*Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids     []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Success bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateMultipleProspectsResponse) Reset() {
	*x = CreateMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultipleProspectsResponse) ProtoMessage() {}

func (x *CreateMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*CreateMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{11}
}

func (x *CreateMultipleProspectsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CreateMultipleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateMultipleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Data   *Prospects `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateSingleProspectsRequest) Reset() {
	*x = UpdateSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleProspectsRequest) ProtoMessage() {}

func (x *UpdateSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSingleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateSingleProspectsRequest) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateSingleProspectsResponse) Reset() {
	*x = UpdateSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleProspectsResponse) ProtoMessage() {}

func (x *UpdateSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSingleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSingleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []string   `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Filter *Filter    `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Data   *Prospects `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateMultipleProspectsRequest) Reset() {
	*x = UpdateMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMultipleProspectsRequest) ProtoMessage() {}

func (x *UpdateMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*UpdateMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMultipleProspectsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMultipleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateMultipleProspectsRequest) GetData() *Prospects {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateMultipleProspectsResponse) Reset() {
	*x = UpdateMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMultipleProspectsResponse) ProtoMessage() {}

func (x *UpdateMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*UpdateMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateMultipleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateMultipleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteSingleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filter *Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DeleteSingleProspectsRequest) Reset() {
	*x = DeleteSingleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSingleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleProspectsRequest) ProtoMessage() {}

func (x *DeleteSingleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleProspectsRequest.ProtoReflect.Descriptor instead.
func (*DeleteSingleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSingleProspectsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteSingleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DeleteSingleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteSingleProspectsResponse) Reset() {
	*x = DeleteSingleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSingleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleProspectsResponse) ProtoMessage() {}

func (x *DeleteSingleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleProspectsResponse.ProtoReflect.Descriptor instead.
func (*DeleteSingleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSingleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteSingleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteMultipleProspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Filter *Filter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DeleteMultipleProspectsRequest) Reset() {
	*x = DeleteMultipleProspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMultipleProspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMultipleProspectsRequest) ProtoMessage() {}

func (x *DeleteMultipleProspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMultipleProspectsRequest.ProtoReflect.Descriptor instead.
func (*DeleteMultipleProspectsRequest) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteMultipleProspectsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMultipleProspectsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DeleteMultipleProspectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteMultipleProspectsResponse) Reset() {
	*x = DeleteMultipleProspectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prospects_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMultipleProspectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMultipleProspectsResponse) ProtoMessage() {}

func (x *DeleteMultipleProspectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prospects_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMultipleProspectsResponse.ProtoReflect.Descriptor instead.
func (*DeleteMultipleProspectsResponse) Descriptor() ([]byte, []int) {
	return file_prospects_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteMultipleProspectsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteMultipleProspectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_prospects_proto protoreflect.FileDescriptor

var file_prospects_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x98, 0x02, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x46, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x88, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x48, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x1f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x73, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x29,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x59, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xa1, 0x09, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x7f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x8d, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x8b, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x99,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x0d,
	0x5a, 0x0b, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prospects_proto_rawDescOnce sync.Once
	file_prospects_proto_rawDescData = file_prospects_proto_rawDesc
)

func file_prospects_proto_rawDescGZIP() []byte {
	file_prospects_proto_rawDescOnce.Do(func() {
		file_prospects_proto_rawDescData = protoimpl.X.CompressGZIP(file_prospects_proto_rawDescData)
	})
	return file_prospects_proto_rawDescData
}

var file_prospects_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_prospects_proto_goTypes = []interface{}{
	(*Error)(nil),                           // 0: prospects.Error
	(*FilterField)(nil),                     // 1: prospects.FilterField
	(*Filter)(nil),                          // 2: prospects.Filter
	(*Prospects)(nil),                       // 3: prospects.Prospects
	(*GetSingleProspectsRequest)(nil),       // 4: prospects.GetSingleProspectsRequest
	(*GetSingleProspectsResponse)(nil),      // 5: prospects.GetSingleProspectsResponse
	(*GetMultipleProspectsRequest)(nil),     // 6: prospects.GetMultipleProspectsRequest
	(*GetMultipleProspectsResponse)(nil),    // 7: prospects.GetMultipleProspectsResponse
	(*CreateSingleProspectsRequest)(nil),    // 8: prospects.CreateSingleProspectsRequest
	(*CreateSingleProspectsResponse)(nil),   // 9: prospects.CreateSingleProspectsResponse
	(*CreateMultipleProspectsRequest)(nil),  // 10: prospects.CreateMultipleProspectsRequest
	(*CreateMultipleProspectsResponse)(nil), // 11: prospects.CreateMultipleProspectsResponse
	(*UpdateSingleProspectsRequest)(nil),    // 12: prospects.UpdateSingleProspectsRequest
	(*UpdateSingleProspectsResponse)(nil),   // 13: prospects.UpdateSingleProspectsResponse
	(*UpdateMultipleProspectsRequest)(nil),  // 14: prospects.UpdateMultipleProspectsRequest
	(*UpdateMultipleProspectsResponse)(nil), // 15: prospects.UpdateMultipleProspectsResponse
	(*DeleteSingleProspectsRequest)(nil),    // 16: prospects.DeleteSingleProspectsRequest
	(*DeleteSingleProspectsResponse)(nil),   // 17: prospects.DeleteSingleProspectsResponse
	(*DeleteMultipleProspectsRequest)(nil),  // 18: prospects.DeleteMultipleProspectsRequest
	(*DeleteMultipleProspectsResponse)(nil), // 19: prospects.DeleteMultipleProspectsResponse
}
var file_prospects_proto_depIdxs = []int32{
	1,  // 0: prospects.Filter.id:type_name -> prospects.FilterField
	1,  // 1: prospects.Filter.name:type_name -> prospects.FilterField
	1,  // 2: prospects.Filter.email:type_name -> prospects.FilterField
	1,  // 3: prospects.Filter.status:type_name -> prospects.FilterField
	1,  // 4: prospects.Filter.userId:type_name -> prospects.FilterField
	1,  // 5: prospects.Filter.phone:type_name -> prospects.FilterField
	2,  // 6: prospects.GetSingleProspectsRequest.filter:type_name -> prospects.Filter
	3,  // 7: prospects.GetSingleProspectsResponse.data:type_name -> prospects.Prospects
	0,  // 8: prospects.GetSingleProspectsResponse.error:type_name -> prospects.Error
	2,  // 9: prospects.GetMultipleProspectsRequest.filter:type_name -> prospects.Filter
	3,  // 10: prospects.GetMultipleProspectsResponse.data:type_name -> prospects.Prospects
	0,  // 11: prospects.GetMultipleProspectsResponse.error:type_name -> prospects.Error
	3,  // 12: prospects.CreateSingleProspectsRequest.data:type_name -> prospects.Prospects
	0,  // 13: prospects.CreateSingleProspectsResponse.error:type_name -> prospects.Error
	3,  // 14: prospects.CreateMultipleProspectsRequest.data:type_name -> prospects.Prospects
	0,  // 15: prospects.CreateMultipleProspectsResponse.error:type_name -> prospects.Error
	2,  // 16: prospects.UpdateSingleProspectsRequest.filter:type_name -> prospects.Filter
	3,  // 17: prospects.UpdateSingleProspectsRequest.data:type_name -> prospects.Prospects
	0,  // 18: prospects.UpdateSingleProspectsResponse.error:type_name -> prospects.Error
	2,  // 19: prospects.UpdateMultipleProspectsRequest.filter:type_name -> prospects.Filter
	3,  // 20: prospects.UpdateMultipleProspectsRequest.data:type_name -> prospects.Prospects
	0,  // 21: prospects.UpdateMultipleProspectsResponse.error:type_name -> prospects.Error
	2,  // 22: prospects.DeleteSingleProspectsRequest.filter:type_name -> prospects.Filter
	0,  // 23: prospects.DeleteSingleProspectsResponse.error:type_name -> prospects.Error
	2,  // 24: prospects.DeleteMultipleProspectsRequest.filter:type_name -> prospects.Filter
	0,  // 25: prospects.DeleteMultipleProspectsResponse.error:type_name -> prospects.Error
	4,  // 26: prospects.prospectsService.GetSingleProspects:input_type -> prospects.GetSingleProspectsRequest
	6,  // 27: prospects.prospectsService.GetMultipleProspects:input_type -> prospects.GetMultipleProspectsRequest
	8,  // 28: prospects.prospectsService.CreateSingleProspects:input_type -> prospects.CreateSingleProspectsRequest
	10, // 29: prospects.prospectsService.CreateMultipleProspects:input_type -> prospects.CreateMultipleProspectsRequest
	12, // 30: prospects.prospectsService.UpdateSingleProspects:input_type -> prospects.UpdateSingleProspectsRequest
	14, // 31: prospects.prospectsService.UpdateMultipleProspects:input_type -> prospects.UpdateMultipleProspectsRequest
	16, // 32: prospects.prospectsService.DeleteSingleProspects:input_type -> prospects.DeleteSingleProspectsRequest
	18, // 33: prospects.prospectsService.DeleteMultipleProspects:input_type -> prospects.DeleteMultipleProspectsRequest
	5,  // 34: prospects.prospectsService.GetSingleProspects:output_type -> prospects.GetSingleProspectsResponse
	7,  // 35: prospects.prospectsService.GetMultipleProspects:output_type -> prospects.GetMultipleProspectsResponse
	9,  // 36: prospects.prospectsService.CreateSingleProspects:output_type -> prospects.CreateSingleProspectsResponse
	11, // 37: prospects.prospectsService.CreateMultipleProspects:output_type -> prospects.CreateMultipleProspectsResponse
	13, // 38: prospects.prospectsService.UpdateSingleProspects:output_type -> prospects.UpdateSingleProspectsResponse
	15, // 39: prospects.prospectsService.UpdateMultipleProspects:output_type -> prospects.UpdateMultipleProspectsResponse
	17, // 40: prospects.prospectsService.DeleteSingleProspects:output_type -> prospects.DeleteSingleProspectsResponse
	19, // 41: prospects.prospectsService.DeleteMultipleProspects:output_type -> prospects.DeleteMultipleProspectsResponse
	34, // [34:42] is the sub-list for method output_type
	26, // [26:34] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_prospects_proto_init() }
func file_prospects_proto_init() {
	if File_prospects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prospects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prospects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSingleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSingleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMultipleProspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prospects_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMultipleProspectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prospects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prospects_proto_goTypes,
		DependencyIndexes: file_prospects_proto_depIdxs,
		MessageInfos:      file_prospects_proto_msgTypes,
	}.Build()
	File_prospects_proto = out.File
	file_prospects_proto_rawDesc = nil
	file_prospects_proto_goTypes = nil
	file_prospects_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProspectsServiceClient is the client API for ProspectsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProspectsServiceClient interface {
	GetSingleProspects(ctx context.Context, in *GetSingleProspectsRequest, opts ...grpc.CallOption) (*GetSingleProspectsResponse, error)
	GetMultipleProspects(ctx context.Context, in *GetMultipleProspectsRequest, opts ...grpc.CallOption) (*GetMultipleProspectsResponse, error)
	CreateSingleProspects(ctx context.Context, in *CreateSingleProspectsRequest, opts ...grpc.CallOption) (*CreateSingleProspectsResponse, error)
	CreateMultipleProspects(ctx context.Context, in *CreateMultipleProspectsRequest, opts ...grpc.CallOption) (*CreateMultipleProspectsResponse, error)
	UpdateSingleProspects(ctx context.Context, in *UpdateSingleProspectsRequest, opts ...grpc.CallOption) (*UpdateSingleProspectsResponse, error)
	UpdateMultipleProspects(ctx context.Context, in *UpdateMultipleProspectsRequest, opts ...grpc.CallOption) (*UpdateMultipleProspectsResponse, error)
	DeleteSingleProspects(ctx context.Context, in *DeleteSingleProspectsRequest, opts ...grpc.CallOption) (*DeleteSingleProspectsResponse, error)
	DeleteMultipleProspects(ctx context.Context, in *DeleteMultipleProspectsRequest, opts ...grpc.CallOption) (*DeleteMultipleProspectsResponse, error)
}

type prospectsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProspectsServiceClient(cc grpc.ClientConnInterface) ProspectsServiceClient {
	return &prospectsServiceClient{cc}
}

func (c *prospectsServiceClient) GetSingleProspects(ctx context.Context, in *GetSingleProspectsRequest, opts ...grpc.CallOption) (*GetSingleProspectsResponse, error) {
	out := new(GetSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/GetSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) GetMultipleProspects(ctx context.Context, in *GetMultipleProspectsRequest, opts ...grpc.CallOption) (*GetMultipleProspectsResponse, error) {
	out := new(GetMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/GetMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) CreateSingleProspects(ctx context.Context, in *CreateSingleProspectsRequest, opts ...grpc.CallOption) (*CreateSingleProspectsResponse, error) {
	out := new(CreateSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/CreateSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) CreateMultipleProspects(ctx context.Context, in *CreateMultipleProspectsRequest, opts ...grpc.CallOption) (*CreateMultipleProspectsResponse, error) {
	out := new(CreateMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/CreateMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) UpdateSingleProspects(ctx context.Context, in *UpdateSingleProspectsRequest, opts ...grpc.CallOption) (*UpdateSingleProspectsResponse, error) {
	out := new(UpdateSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/UpdateSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) UpdateMultipleProspects(ctx context.Context, in *UpdateMultipleProspectsRequest, opts ...grpc.CallOption) (*UpdateMultipleProspectsResponse, error) {
	out := new(UpdateMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/UpdateMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) DeleteSingleProspects(ctx context.Context, in *DeleteSingleProspectsRequest, opts ...grpc.CallOption) (*DeleteSingleProspectsResponse, error) {
	out := new(DeleteSingleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/DeleteSingleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prospectsServiceClient) DeleteMultipleProspects(ctx context.Context, in *DeleteMultipleProspectsRequest, opts ...grpc.CallOption) (*DeleteMultipleProspectsResponse, error) {
	out := new(DeleteMultipleProspectsResponse)
	err := c.cc.Invoke(ctx, "/prospects.prospectsService/DeleteMultipleProspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProspectsServiceServer is the server API for ProspectsService service.
type ProspectsServiceServer interface {
	GetSingleProspects(context.Context, *GetSingleProspectsRequest) (*GetSingleProspectsResponse, error)
	GetMultipleProspects(context.Context, *GetMultipleProspectsRequest) (*GetMultipleProspectsResponse, error)
	CreateSingleProspects(context.Context, *CreateSingleProspectsRequest) (*CreateSingleProspectsResponse, error)
	CreateMultipleProspects(context.Context, *CreateMultipleProspectsRequest) (*CreateMultipleProspectsResponse, error)
	UpdateSingleProspects(context.Context, *UpdateSingleProspectsRequest) (*UpdateSingleProspectsResponse, error)
	UpdateMultipleProspects(context.Context, *UpdateMultipleProspectsRequest) (*UpdateMultipleProspectsResponse, error)
	DeleteSingleProspects(context.Context, *DeleteSingleProspectsRequest) (*DeleteSingleProspectsResponse, error)
	DeleteMultipleProspects(context.Context, *DeleteMultipleProspectsRequest) (*DeleteMultipleProspectsResponse, error)
}

// UnimplementedProspectsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProspectsServiceServer struct {
}

func (*UnimplementedProspectsServiceServer) GetSingleProspects(context.Context, *GetSingleProspectsRequest) (*GetSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) GetMultipleProspects(context.Context, *GetMultipleProspectsRequest) (*GetMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) CreateSingleProspects(context.Context, *CreateSingleProspectsRequest) (*CreateSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) CreateMultipleProspects(context.Context, *CreateMultipleProspectsRequest) (*CreateMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMultipleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) UpdateSingleProspects(context.Context, *UpdateSingleProspectsRequest) (*UpdateSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) UpdateMultipleProspects(context.Context, *UpdateMultipleProspectsRequest) (*UpdateMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMultipleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) DeleteSingleProspects(context.Context, *DeleteSingleProspectsRequest) (*DeleteSingleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSingleProspects not implemented")
}
func (*UnimplementedProspectsServiceServer) DeleteMultipleProspects(context.Context, *DeleteMultipleProspectsRequest) (*DeleteMultipleProspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMultipleProspects not implemented")
}

func RegisterProspectsServiceServer(s *grpc.Server, srv ProspectsServiceServer) {
	s.RegisterService(&_ProspectsService_serviceDesc, srv)
}

func _ProspectsService_GetSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).GetSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/GetSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).GetSingleProspects(ctx, req.(*GetSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_GetMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).GetMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/GetMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).GetMultipleProspects(ctx, req.(*GetMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_CreateSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).CreateSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/CreateSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).CreateSingleProspects(ctx, req.(*CreateSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_CreateMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).CreateMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/CreateMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).CreateMultipleProspects(ctx, req.(*CreateMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_UpdateSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).UpdateSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/UpdateSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).UpdateSingleProspects(ctx, req.(*UpdateSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_UpdateMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).UpdateMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/UpdateMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).UpdateMultipleProspects(ctx, req.(*UpdateMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_DeleteSingleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSingleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).DeleteSingleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/DeleteSingleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).DeleteSingleProspects(ctx, req.(*DeleteSingleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProspectsService_DeleteMultipleProspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMultipleProspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProspectsServiceServer).DeleteMultipleProspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prospects.prospectsService/DeleteMultipleProspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProspectsServiceServer).DeleteMultipleProspects(ctx, req.(*DeleteMultipleProspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProspectsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prospects.prospectsService",
	HandlerType: (*ProspectsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSingleProspects",
			Handler:    _ProspectsService_GetSingleProspects_Handler,
		},
		{
			MethodName: "GetMultipleProspects",
			Handler:    _ProspectsService_GetMultipleProspects_Handler,
		},
		{
			MethodName: "CreateSingleProspects",
			Handler:    _ProspectsService_CreateSingleProspects_Handler,
		},
		{
			MethodName: "CreateMultipleProspects",
			Handler:    _ProspectsService_CreateMultipleProspects_Handler,
		},
		{
			MethodName: "UpdateSingleProspects",
			Handler:    _ProspectsService_UpdateSingleProspects_Handler,
		},
		{
			MethodName: "UpdateMultipleProspects",
			Handler:    _ProspectsService_UpdateMultipleProspects_Handler,
		},
		{
			MethodName: "DeleteSingleProspects",
			Handler:    _ProspectsService_DeleteSingleProspects_Handler,
		},
		{
			MethodName: "DeleteMultipleProspects",
			Handler:    _ProspectsService_DeleteMultipleProspects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prospects.proto",
}
