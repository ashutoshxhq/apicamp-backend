{
  "swagger": "2.0",
  "info": {
    "title": "users.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users": {
      "post": {
        "operationId": "usersService_GetMultipleUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersGetMultipleUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersGetMultipleUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    },
    "/v1/users/create": {
      "post": {
        "operationId": "usersService_CreateSingleUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersCreateSingleUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersCreateSingleUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    },
    "/v1/users/createMultiple": {
      "post": {
        "operationId": "usersService_CreateMultipleUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersCreateMultipleUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersCreateMultipleUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    },
    "/v1/users/delete": {
      "post": {
        "operationId": "usersService_DeleteUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersDeleteUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersDeleteUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    },
    "/v1/users/getSingle": {
      "post": {
        "operationId": "usersService_GetSingleUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersGetSingleUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersGetSingleUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    },
    "/v1/users/update": {
      "post": {
        "operationId": "usersService_UpdateUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/usersUpdateUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersUpdateUsersRequest"
            }
          }
        ],
        "tags": [
          "usersService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "usersCreateMultipleUsersRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/usersUsers"
          }
        }
      }
    },
    "usersCreateMultipleUsersResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "usersCreateSingleUsersRequest": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/usersUsers"
        }
      }
    },
    "usersCreateSingleUsersResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "usersDeleteUsersRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "usersDeleteUsersResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "usersGetMultipleUsersRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "usersGetMultipleUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/usersUsers"
          }
        }
      }
    },
    "usersGetSingleUsersRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "usersGetSingleUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/usersUsers"
        }
      }
    },
    "usersUpdateUsersRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "usersUpdateUsersResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "usersUsers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    }
  }
}
